name: CI

on:
  push:
    branches: [main, master, develop, 'feat/**']
  pull_request:
    branches: [main, master, develop]

jobs:
  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ['3.10', '3.12']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[test]
        pip install requests

    - name: Run tests
      run: pytest

    - name: Generate coverage report
      if: matrix.python-version == '3.12'
      run: |
        pytest --cov=src --cov-report=xml --cov-report=term --cov-report=html
        echo "## Coverage Summary" >> $GITHUB_STEP_SUMMARY
        echo "Coverage report has been generated" >> $GITHUB_STEP_SUMMARY
        python -c "import xml.etree.ElementTree as ET; tree = ET.parse('coverage.xml'); root = tree.getroot(); coverage = round(float(root.get('line-rate', 0)) * 100, 2); print(f'Overall Coverage: {coverage}%')" >> $GITHUB_STEP_SUMMARY

    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.12'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]

    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 src tests --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 src tests --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics

    - name: Check formatting with black
      run: black --check src tests

    - name: Type check with mypy
      run: mypy src || true